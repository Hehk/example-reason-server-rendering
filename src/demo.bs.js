// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Curry                    = require("bs-platform/lib/js/curry.js");
var Js_exn                   = require("bs-platform/lib/js/js_exn.js");
var Express                  = require("bs-express/src/Express.js");
var Process                  = require("process");
var Pervasives               = require("bs-platform/lib/js/pervasives.js");
var ReasonReact              = require("reason-react/src/ReasonReact.js");
var Server                   = require("react-dom/server");
var App$ServerRendering      = require("./app.bs.js");
var Template$ServerRendering = require("./template.bs.js");

var app = Express.App[/* make */15](/* () */0);

function renderHTML(_, _$1, res) {
  var content = Server.renderToString(ReasonReact.element(/* None */0, /* None */0, App$ServerRendering.make(/* array */[])));
  return Express.Response[/* sendString */2](Template$ServerRendering.make(content, "Server Rendering", /* () */0), res);
}

Curry._3(Express.App[/* useOnPath */2], app, "/", Express.Middleware[/* from */3](renderHTML));

function onListen(e) {
  var exit = 0;
  var val;
  try {
    val = e;
    exit = 1;
  }
  catch (raw_exn){
    var exn = Js_exn.internalToOCamlException(raw_exn);
    if (exn[0] === Js_exn.$$Error) {
      console.log(exn[1]);
      Process.exit(1);
      return /* () */0;
    } else {
      throw exn;
    }
  }
  if (exit === 1) {
    console.log("listening at localhost:" + Pervasives.string_of_int(3000));
    return /* () */0;
  }
  
}

Express.App[/* listen */19](app, /* Some */[3000], /* Some */[onListen], /* () */0);

var port = 3000;

exports.app        = app;
exports.renderHTML = renderHTML;
exports.port       = port;
exports.onListen   = onListen;
/* app Not a pure module */
